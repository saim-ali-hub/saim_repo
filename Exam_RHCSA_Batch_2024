1. Recover root password 
2. Assign Static IP 192.168.100.120 to node1. Netmask: 255.255.255.0 Gateway: 192.168.1.1 NameServer: 192.168.1.1. 
3. Configure YUM repos, Repositories URLs can be found on exam Instruction page.
4. Configure chrony such that time is synchronized with "server" i.e.  ntp server. 
5. Configure autofs. The share nfs-server-hostname-or-ip:/remoteusers/user1 should be mounted on /rhome/user1. 
6. Perform following Tasks:
      i. Create group "admins" and Add following users: 'max', 'bob', 'chris'. 'max' and 'bob' should be a part of secondary group "admins". 
     ii. ‘chris’ should not have access to login shell and not a member of admins group. 
    iii. Give SUDO privilege to group "admins" that members of group "admins” can run administrative commands without entering password. 
     iv. Change the umask value for user 'bob' in a way that new files created by user 'bob' should get default permissions user="read write" group="read write" other=read. 
7. Force the user "max" to change password on first login. Set the account expiration to 45 days for user "max”
8. Configure password policy so all new users will have maximum password usage period of 90 days. 
9. Create a Collaboration directory /tmp/developers:
       i. Give full access to "developers" group on /tmp/developers directory and no access to other users. 
      ii. Users should not be able to delete other user’s files. 
     iii. New files created in “/tmp/developers” automatically have group ownership set to the ‘developers’ group.
10. Install group software "RPM Development Tools"  
11. Troubleshoot webserver and if successfully running it should show "I am Enjoying RHCSA preparation" content on port 82, Don't change any configuration. 
12. Create an archive of /usr/bin and call it “archive.tar” under /tmp and compress it with bzip2.
13. Preserve Journals. Redirect the output of previous boot logs to /var/tmp/boot_logs. 
14. Configure system tuning so that the recommended profile is selected. 
15. Cron job configuration 
    a) As user “max”, create a cron job that runs logger -i “I am preparing RHCSA9 Exam” at 2:45PM every day, every week, every month.
    b) Make sure user "natasha" should not be able to create cron job.  
16. Create a logical volume and shrinking it.
Task1: Create a volume group name "vg1" on /dev/sdb1 physical volume, create 400M logical volume "lv1", format with ext4 filesystem, mount it on /app1.
Task2: Shrink the filesystem size to 300M. After shrinking if size is between 250 and 300M that is also acceptable.
17. Creating a logical volume and extending it. 
Task1: create a volume group name "vg2" on /dev/sdb2 physical volume, create 300M logical volume "lv2", format with ext4 filesystem, mount it on /app2. 
Task2: Then Extend the filesystem to 500M. After extending if size is between 450 and 500M that is also acceptable.
18. Configure LVM such a way that A logical volume called "lv3" by assigning 50 extents. It should be formatted with ext4 filesystem and mounted on /app3. "lv3" logical volume is a part of volume group "vg3" which has a PE size of 8MiB. The physical volume is created on /dev/sdb3.
19. Create a SWAP partition of 512 MB on /dev/sdb4 and mount it permanently.
20. Manage permissions and access of the users for files.
    a. Copy the file /etc/fstab to /var/tmp. Configure the permissions of /var/tmp/fstab so that:
        The file /var/tmp/fstab is owned by the root user
        The file /var/tmp/fstab belongs to the group root
        The file /var/tmp/fstab should not be executable by anyone
        The user "natasha" is able to read and write /var/tmp/fstab
        The user "harry" can neither write nor read /var/tmp/fstab
        All other users (current or future) have the ability to read /var/tmp/fstab
    b. Create a directory /tmp/data2 as “linda” user and give read write access to 'bob' on this directory without making him owner and don't add into the group either, there should be no access for others. 
21. Container Management I
    a) Login as linda user, create a container image from http://<server_ip>/saim-repo/Containerfile and give name "webimage". 
    b) As local user linda, create a container called "web_container1" using image "webimage". Map port of container port 8080 to port 8090. Create directories /opt/myactions and /opt/myplans. Mount /opt/myactions inside container on /var/www/html and /opt/myplans on /tmp/data1. Also, configure this container to start automatically as systemd service after reboot. Also create a file "my_file1" in /opt/myplans that should appear in pdf in /tmp/data1.
22. Container Management II
    a) Login as kevin user, create a container image from http://<server_ip>/saim-repo/Containerfile_new and give name "new_webimage" 
    b) As local user kevin, create a container called "myweb1" from image "new_webimage". Create directory /opt/web and /opt/programs. Mount /opt/web inside container on /tmp/mnt1 and /opt/programs on /tmp/mnt2. Also, configure this container to start automatically as systemd service after reboot. Also create a file "web_file1" in /opt/web that should appear in pdf in /tmp/mnt1
23. Configure Autofs:
    a) To automatically mount the below NFS shares on abc.example.com machine at /automount directory.
       192.168.85.131:/public & 192.168.85.131:/private
    b) The public nfs share should have read only access for all users.
    c) The private nfs share should have read write access for all users.
    d) Both shares should get automatically unmount
24. Use find command and perform following tasks:
    a) Find all the files under /usr/share directory that are newer than 30 days and copy them in /tmp/new_dir directory. 
    b) Find all files own by user "linda" in /opt and copy them to /var/tmp/linda. 
    c) Filter "Root" string from /etc/ssh/sshd_config with line numbering and redirect into /var/tmp/string_output
    d) Create a program which look for files own by group admins and copy them to /tmp/new_dir.
25. Use grep command:
    a) Find all lines from /etc/ssh/sshd_config that contain the string "root", including blank lines, with line numbers and store in file /var/tmp/sshd_output.
    b) Remove all empty lines from a file /etc/ssh/sshd_config and redirect the filtered output to another file /tmp/new_file.

